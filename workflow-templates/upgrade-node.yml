# NOTE: Before adding this workflow (or as part of the same commit/PR), please copy the following script into your project:
# https://github.com/hashicorp/cdktf-aws-cdk/blob/main/scripts/check-node-versions.js
# Make sure it either stays located at `scripts/check-node-versions.js` or update the path in this workflow
# 
# By default, PRs will be created by github-actions[bot] - you can change this by using a different token at the end

name: upgrade-node
on:
  schedule:
    - cron: $cron-daily
  workflow_dispatch: {}
concurrency: ${{ github.workflow }}-${{ github.ref }}
jobs:
  upgrade:
    name: Upgrade Node.js
    runs-on: ubuntu-latest
    # If you choose to use a custom token, you can change this to just "contents: read"
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - name: Install
        run: yarn install
      - name: Get current Node.js version
        id: current_version
        run: |-
          ENGINES_NODE_VERSION=$(npm pkg get engines.node | tr -d '"')
          CURRENT_VERSION=$(cut -d " " -f 2 <<< "$ENGINES_NODE_VERSION")
          CURRENT_VERSION_MINOR=$(cut -d "." -f 1 <<< "$CURRENT_VERSION")
          echo "CURRENT_NODEJS_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
          echo "CURRENT_NODEJS_VERSION_MINOR=$CURRENT_VERSION_MINOR" >> $GITHUB_ENV
          echo "value=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "minor=$CURRENT_VERSION_MINOR" >> $GITHUB_OUTPUT
      - name: Get the earliest supported Node.js version whose EOL date is at least a month away
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |-
            const script = require('./scripts/check-node-versions.js')
            await script({github, context, core})
      - name: Update the package with the new minimum Node version and update @types/node
        if: env.CURRENT_NODEJS_VERSION_MINOR != env.NEW_NODEJS_VERSION_MINOR
        run: |-
          npm pkg set engines.node=">= $NEW_NODEJS_VERSION"
          yarn add -D @types/node@^$NEW_NODEJS_VERSION_MINOR
      # If there are other steps you need to take in your project to update Node.js everywhere, add those here
      - name: Get values for pull request
        id: latest_version
        if: env.CURRENT_NODEJS_VERSION_MINOR != env.NEW_NODEJS_VERSION_MINOR
        run: |-
          echo "value=$NEW_NODEJS_VERSION" >> $GITHUB_OUTPUT
          echo "minor=$NEW_NODEJS_VERSION_MINOR" >> $GITHUB_OUTPUT
      - name: Create Pull Request
        if: env.CURRENT_NODEJS_VERSION_MINOR != env.NEW_NODEJS_VERSION_MINOR
        uses: peter-evans/create-pull-request@153407881ec5c347639a548ade7d8ad1d6740e38 # v5.0.2
        with:
          commit-message: "chore!: increase minimum supported Node.js version to ${{ steps.latest_version.outputs.minor }}"
          branch: auto/upgrade-node-${{ steps.latest_version.outputs.minor }}
          base: main
          title: "chore!: increase minimum supported Node.js version to ${{ steps.latest_version.outputs.minor }}"
          body: This PR increases the minimum supported Node.js version to `${{ steps.latest_version.outputs.value }}` from `${{ steps.current_version.outputs.value }}` because version ${{ steps.current_version.outputs.minor }} is less than 30 days away from EOL.
          labels: automerge,automated,security
          token: ${{ secrets.GITHUB_TOKEN }}
          author: team-tf-cdk <github-team-tf-cdk@hashicorp.com>
          committer: team-tf-cdk <github-team-tf-cdk@hashicorp.com>
          signoff: true
          delete-branch: true
